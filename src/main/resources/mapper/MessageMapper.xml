<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">
    <update id="updateUnreadMessages">
        update message set status = 1
        where
        id in
        <foreach collection="idList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectValidateConversation" resultType="Message">
        select * from message
        where id in(
            select max(id) from message
            where status!=2
            and from_id != 1
            and (to_id=#{userId} or from_id=#{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectCountConversation" resultType="int">
        select count(m.max_id) from (
          select max(id) as max_id from message
          where status!=2
            and from_id != 1
            and (to_id=#{userId} or from_id=#{userId})
          group by conversation_id
        ) as m
    </select>

    <select id="selectUnreadCountMessage" resultType="int">
        select count(*) from message
        where to_id=#{userId}
        and from_id!=1
        and status = 0
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectLetters" resultType="Message">
        select * from message
        where conversation_id=#{conversationId}
        and status!=2
        and from_id != 1
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectCountLetters" resultType="int">
        select count(*) from message
        where conversation_id=#{conversationId}
        and status!=2
        and from_id != 1
    </select>

    <insert id="insertMessage">
        insert into message (from_id, to_id, conversation_id, content, status, create_time)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime});
    </insert>

    <update id="deleteMessageById">
        update message set status=2 where id=#{id}
    </update>
</mapper>